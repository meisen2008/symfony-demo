diff --git a/app/Command/AddUserCommand.php b/app/Command/AddUserCommand.php
index 7edc42a..c3f02c4 100644
--- a/app/Command/AddUserCommand.php
+++ b/app/Command/AddUserCommand.php
@@ -171,7 +171,7 @@ class AddUserCommand extends ContainerAwareCommand
         $isAdmin = $input->getOption('is-admin');
 
         // first check if a user with the same username already exists
-        $existingUser = $this->em->getRepository('AppBundle:User')->findOneBy(array('username' => $username));
+        $existingUser = $this->em->getRepository('App:User')->findOneBy(array('username' => $username));
 
         if (null !== $existingUser) {
             throw new \RuntimeException(sprintf('There is already a user registered with the "%s" username.', $username));
diff --git a/app/Command/ListUsersCommand.php b/app/Command/ListUsersCommand.php
index f528c56..3d47b3c 100644
--- a/app/Command/ListUsersCommand.php
+++ b/app/Command/ListUsersCommand.php
@@ -82,7 +82,7 @@ HELP
     {
         $maxResults = $input->getOption('max-results');
         // Use ->findBy() instead of ->findAll() to allow result sorting and limiting
-        $users = $this->em->getRepository('AppBundle:User')->findBy(array(), array('id' => 'DESC'), $maxResults);
+        $users = $this->em->getRepository('App:User')->findBy(array(), array('id' => 'DESC'), $maxResults);
 
         // Doctrine query returns an array of objects and we need an array of plain arrays
         $usersAsPlainArrays = array_map(function ($user) {
diff --git a/app/Controller/Admin/BlogController.php b/app/Controller/Admin/BlogController.php
index 8c72c36..b792892 100644
--- a/app/Controller/Admin/BlogController.php
+++ b/app/Controller/Admin/BlogController.php
@@ -48,7 +48,7 @@ class BlogController extends Controller
     public function indexAction()
     {
         $em = $this->getDoctrine()->getManager();
-        $posts = $em->getRepository('AppBundle:Post')->findAll();
+        $posts = $em->getRepository('App:Post')->findAll();
 
         return $this->render('admin/blog/index.html.twig', array('posts' => $posts));
     }
diff --git a/app/Controller/BlogController.php b/app/Controller/BlogController.php
index d7c5a67..14e69a0 100644
--- a/app/Controller/BlogController.php
+++ b/app/Controller/BlogController.php
@@ -38,7 +38,7 @@ class BlogController extends Controller
     public function indexAction()
     {
         $em = $this->getDoctrine()->getManager();
-        $posts = $em->getRepository('AppBundle:Post')->findLatest();
+        $posts = $em->getRepository('App:Post')->findLatest();
 
         return $this->render('blog/index.html.twig', array('posts' => $posts));
     }
diff --git a/app/config/config.yml b/app/config/config.yml
index daf94be..f0985c4 100644
--- a/app/config/config.yml
+++ b/app/config/config.yml
@@ -71,6 +71,13 @@ doctrine:
     orm:
         auto_generate_proxy_classes: "%kernel.debug%"
         auto_mapping: true
+        mappings:
+            app:
+                type: annotation
+                dir: %kernel.root_dir%/Entity
+                prefix: App\Entity
+                alias: App
+                is_bundle: false
 
 # Swiftmailer Configuration (used to send emails)
 swiftmailer:
diff --git a/app/config/security.yml b/app/config/security.yml
index bfc7af8..72d1db9 100644
--- a/app/config/security.yml
+++ b/app/config/security.yml
@@ -9,7 +9,7 @@ security:
         # To see the users at app/DataFixtures/ORM/LoadFixtures.php
         # To load users from somewhere else: http://symfony.com/doc/current/cookbook/security/custom_provider.html
         database_users:
-            entity: { class: AppBundle:User, property: username }
+            entity: { class: App:User, property: username }
 
     # http://symfony.com/doc/current/book/security.html#firewalls-authentication
     firewalls:
diff --git a/app/config/services.yml b/app/config/services.yml
index b6d6226..7b413fd 100644
--- a/app/config/services.yml
+++ b/app/config/services.yml
@@ -41,7 +41,7 @@ services:
     #
     # // traditional code inside a controller
     # $em = $this->getDoctrine()->getManager();
-    # $posts = $em->getRepository('AppBundle:Post')->findAll();
+    # $posts = $em->getRepository('App:Post')->findAll();
     #
     # // same code using repository services
     # $posts = $this->get('post_repository')->findAll();
